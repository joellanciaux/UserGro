// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:1.3.2.0
//      Runtime Version:4.0.30319.1
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
namespace UserGro.Tests.Behavior
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "1.3.2.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("Account administration")]
    public partial class AccountAdministrationFeature
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "AccountAdministration.feature"
#line hidden
        
        [NUnit.Framework.TestFixtureSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "Account administration", "In order to modify my account\r\nAs a user\r\nI want to be able to change my settings" +
                    "", ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.TestFixtureTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Account administration")]
        public virtual void AccountAdministration()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Account administration", ((string[])(null)));
#line 6
this.ScenarioSetup(scenarioInfo);
#line 8
testRunner.Given("I am a potential user");
#line 9
testRunner.When("I sign up for an account that is available");
#line 10
testRunner.Then("it is given to me");
#line 12
testRunner.Given("I am a potential user");
#line 13
testRunner.When("I sign up for an account that is not available");
#line 14
testRunner.Then("it will not allow me to have that account");
#line 16
testRunner.Given("I am an existing user");
#line 17
testRunner.And("I change my email address");
#line 18
testRunner.And("the email address is not associated with another account");
#line 19
testRunner.Then("the change is set in the system");
#line 21
testRunner.Given("I am an existing user");
#line 22
testRunner.And("I change my email address");
#line 23
testRunner.And("the email address is associated with another user");
#line 24
testRunner.Then("no change is made");
#line 25
testRunner.And("an exception is thrown");
#line 27
testRunner.Given("I am an existing user");
#line 28
testRunner.And("I change my RequiresApprovalToBeFriends");
#line 29
testRunner.Then("the change is set in the system");
#line 31
testRunner.Given("I am an existing user");
#line 32
testRunner.And("I change my profile to be visible to friends only");
#line 33
testRunner.Then("the change is set in the system");
#line 35
testRunner.Given("I am an existing user");
#line 36
testRunner.And("I change my profile to allow messages from non-friends");
#line 37
testRunner.Then("the change is set in the system");
#line 39
testRunner.Given("I am an existing user");
#line 40
testRunner.And("I change my name");
#line 41
testRunner.Then("the change is set in the system");
#line hidden
            testRunner.CollectScenarioErrors();
        }
    }
}
#endregion
